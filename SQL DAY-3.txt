# DAY-1:

# Rules
# 1. Always use Camel Casing
# 2. Don't use Space
# 3. If it Possible then use (_) 'Underscore'

# Step-1 :  Create Database Mydb_Data;
# Syntax : Create Database If Not Exists <DatabaseName>;
Create Database If Not Exists Mydb_Data;

# Step-2 : Use Database : Mydb_Data
# Syntax : Use <DatabaseName>;
Use Mydb_Data;

# Show Databases 
# Syntax : Show Databases;
Show Databases;

# Step-3 : Create Tables inside Database : Mydb_Data
#syntax: Create Table <TableName> (Field1 Datetype, Field2 Datatype, Field3 Datatype);
CREATE TABLE Employee (
    Id INT,
    Name VARCHAR(20),
    Age INT
);

#Checkimg Table Inside Database

Show Tables;

# Using Select Statement: Retrival of Data

#Syntax : Select * From <TableNAme>;
#Syntax: Select Field1,Field2, From <TableName>;

SELECT 
    *
FROM
    Employee;



# DAY-2 :

# INSERT Statement : Inserting the Values inside Table 
INSERT INTO Employee Values (1,'Modi',30);
INSERT INTO Employee (Id,NAME,Age) Values (2,'Rahul',32);

SELECT * FROM Employee;

# Using Aggregate Function with Select Statemenyt

SELECT 
    AVG(Age) AS Average_Age
FROM
    Employee;


SELECT 
    COUNT(ID) AS Total_Count
FROM
    Employee;



SELECT 
    COUNT(DISTINCT (Age)) AS Distinct_Age
FROM
    Employee;


SELECT 
    MIN(Age) AS Min_Age,   
    MAX(Age) AS Max_Age,
    AVG(Age) AS Average_Age
FROM
    Employee;
    
    
SELECT 
    COUNT(*) AS Total_Count
FROM
    Employee;
    
# Insert Multiple Entries in Table

INSERT INTO Employee VAlUES
(3,'Amit',30),
(4,'Ajay',36),
(5,'Kumar',45),
(6,'Rohit',45);

SELECT * FROM Employee;
    
# Using Like Operator : Like Operator is used to get Data Based on Filter
# Where is used for Condition : Conditional Statement : WHERE Clause
# 'R%' : -> This will gives the output Starting with letter 'R"
# '%R' : -> This will gives the output Ending with letter 'R'
# '[A-R]%' -> This will gives the output START with letter 'A' and END with lwtte 'R'


SELECT 
    Name
FROM
    Employee
WHERE
    Name LIKE 'R%';


# Exercise 
-- Q1. Calculate Average Age of People ?
-- Q2. Calculate Unique Age group of People ?
-- Q3. Evaluate the name of the people having age 20 ?
-- Q4. Calaculate Count of People having age greater than 30 ?

# ANSWER Q1 :
SELECT 
    AVG(Age) AS Average_Age
FROM
    Employee;



# ANSWER Q2 :
SELECT 
    COUNT(DISTINCT (Age)) AS Uniquw_Age_group
FROM
    EMployee;


#ANSWER Q3 :
SELECT 
    Name
FROM
    Employee
WHERE
    Age = 30;


# ANSWER Q4 :
SELECT 
    COUNT(*) AS Total_Count
FROM
    Employee
WHERE
    Age > 30;



# Day 03:

-- Create Table : Department

Create Table Department (
id int Not Null Unique,
name varchar(20) Not Null,
location varchar(10) Not Null,
mobileno int Not Null);

# Describe Table : Describe <TableName>; or Desc <TableName>;

Describe Department;

Desc Employee;

# Alter Statement

Alter Table Department 
Modify MobileNo BigInt Not Null;

Alter Table Department
Modify Name Varchar(10) Not Null;

Alter Table Department
Modify Location Varchar(8) Not Null;

Insert into Department Values (1,'Raj','Mumbai',9870335690);

Alter Table Department
Add Column Salary Bigint Not null;

Describe Department;

Select * from Department;

Alter Table Department
Rename column Name to Department_Name;

Alter Table Department
Drop Column Salary;

Describe Department;


-- Q1. Create Database: Mydb
-- Q2. Create Table: Student_Info
-- Q3. Add the Entities inside table: Student_info
--     Student_id,Student_Name,Student_Age,Student_MobileNo,Student_Address,Domain
-- Q4. Alter the Datatype of Student id int to Varchar(7)
-- Q5. Rename Column Domain to Student_Domain
-- Q6. Check Description of Table and Insert Five Values 

-- A1. 
Create Database If Not Exists Mydb;

-- A2 & A3.
Create Table Student_inf (
Student_ID int not null unique,
Student_Name varchar(10) Not Null,
Student_Age int Not Null,
Student_MobileNo BigInt Not Null,
Student_Address Text Not Null,
Domain Varchar(10) Not Null);

-- A4.
Alter Table Student_Inf
Modify Student_ID Varchar(7) Not Null Unique;

-- A5.
Alter Table Student_Inf
Rename Column Domain to Student_Domain;

-- Checking Description of Table: Student_Info
Describe Student_Inf;

-- A6.
Insert into Student_Info Values 
('125A001','Raj',34,9000000001,'Mumbai','IT'),
('125A002','Raju',35,9000000002,'Mumbai','Finance'),
('125A003','Biju',36,9000000003,'Delhi','HR'),
('125A004','Jayesh',37,9000000004,'Pune','HR'),
('124A001','Ritesh',38,9000000005,'Pune','IT');

-- To Retrive the Information using Select Statement

Select * From Student_Info;
